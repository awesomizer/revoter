%h2 
  = @vote.question

%h3
  = @vote.bill.official_title

%p
  = @vote.bill.summary_short

%h5
  = "Required for Passage: #{@vote.required}"

%div.traditional-vote
  %h6.traditional-vote-link
    Traditional /
  %p
    Two votes per state. 

  %ul.traditional-vote-tally
    %li
      = "Result: #{@vote.result}"
    %li
      = "Yea: #{@vote.breakdown["total"]["Yea"]}"
    %li
      = "Nay: #{@vote.breakdown["total"]["Nay"]}"
    %li
      = "Not Voting: #{@vote.breakdown["total"]["Not Voting"]}"
    %li
      = "Present: #{@vote.breakdown["total"]["Present"]}"

%div.popular-vote
  %h6.popular-vote-link
    Popular /
  %p
    Strictly based on population with fractional votes.

  %ul.popular-vote-tally
    %li
      = "Result: #{@pop_tally["Result"]}"
    %li
      = "Yea: #{@pop_tally["Yea"]}"
    %li
      = "Nay: #{@pop_tally["Nay"]}"
    %li
      = "Not Voting: #{@pop_tally["Not Voting"]}"
    %li
      = "Present: #{@pop_tally["Present"]}"

%h6.faction-vote-link
  One Vote Minimum with Fractions / 
%p
  50 votes are distributed to states in the way that <br />
  minimizes the population of people represented by that vote. <br />
  Divide a state's votes evenly between senators.

%ul.faction-vote-tally
  %li
    = "Result: #{@one_per_frac_tally["Result"]}"
  %li
    = "Yea: #{@one_per_frac_tally["Yea"]}"
  %li
    = "Nay: #{@one_per_frac_tally["Nay"]}"
  %li
    = "Not Voting: #{@one_per_frac_tally["Not Voting"]}"
  %li
    = "Present: #{@one_per_frac_tally["Present"]}"

%h6.int-vote-link
  One Vote Minimum with Whole Votes /

%p  
  50 votes are distributed to states in the way that <br />
  minimizes the population of people represented by that vote. <br />
  For states with an odd number of votes, give the extra (or only) vote to the senior senator. 

%ul.int-vote-tally
  %li
    = "Result: #{@one_per_int_tally["Result"]}"
  %li
    = "Yea: #{@one_per_int_tally["Yea"]}"
  %li
    = "Nay: #{@one_per_int_tally["Nay"]}"
  %li
    = "Not Voting: #{@one_per_int_tally["Not Voting"]}"
  %li
    = "Present: #{@one_per_int_tally["Present"]}"

%h3
  Roll Call

%ul#roll-call
  - counter = 0
  - @vote.voters.each_value do |v|
    %li
      = "#{v["voter"]["last_name"]}, #{v["voter"]["first_name"]}, #{v["voter"]["state_name"]} #{v["voter"]["state_rank"]}- vote: #{v["vote"]}" 
      - counter += 1

%p
  = pp @vote.inspect

:javascript
  $( document ).ready( function() {

      var rollCall = function() {

  		  var $rollCall = $( "ul#roll-call" );
          var $popularVote = $( ".popular-vote" );

          var popularRollCall = function() {
              console.log("method has been called");
              console.log(gon.voters);
              var voters = gon.voters
              $.each( voters, function( index, value ) {
                  console.log(index)
                  console.log(value)
                $rollCall.append("<li>" + this.last_name + ", " + this.first_name + " - weight: " + gon.pop_votes[index] + "</li>");
              });
          };
          $popularVote.click( function() {
          console.log("click works");
          popularRollCall();
          });
      }();
  });
