.vote
  %h2 
    = @vote.question

  %h3
    = link_to @vote.bill.official_title, bill_path(@vote.bill), remote: true

  %p
    = @vote.bill.summary_short

  %h5
    = "Required for Passage: #{@vote.required}"

  %div.row-fluid
    %div.span3
      %div{ :class => ['vote-box', 'vote-box-first'], :id => ['traditional-box'] }
        %h4
          Traditional

        %ul.vote-box.traditional-tally
          %li
            = "#{short_result}"
          %li
            = "Yea: #{@vote.breakdown["total"]["Yea"]}"
          %li
            = "Nay: #{@vote.breakdown["total"]["Nay"]}"
          
      %p.details
        \- details -
      
      %p.drop
        The current system, two votes per state.

    %div.span3
      %div{ :class => ['vote-box'], :id => ['popular-box'] }
        %h4
          Popular

        %ul.vote-box.popular-tally
          %li
            = "#{@popular_tally["Result"]}"
          %li
            = "Yea: #{@popular_tally["Yea"]}"
          %li
            = "Nay: #{@popular_tally["Nay"]}"

      %p.details
        \- details -

      %p.drop
        One person one vote for each American.
    
    %div.span3
      %div{ :class => ['vote-box'], :id => ['fraction-box'] } 
        %h4
          1+ Fractional 

        %ul.vote-box.fractional-tally
          %li
            = "#{@fractional_tally["Result"]}"
          %li
            = "Yea: #{@fractional_tally["Yea"]}"
          %li
            = "Nay: #{@fractional_tally["Nay"]}"

      %p.details
        \- details -
      
      %p.drop
        Each state gets one vote and the rest are allocated by population. Divide a state's votes evenly between senators.

    %div.span3
      %div{ :class => ['vote-box'], :id => ['seniority-box'] }
        %h4
          1+ Seniority

        %ul.vote-box.seniority-tally
          %li
            = "#{@seniority_tally["Result"]}"
          %li
            = "Yea: #{@seniority_tally["Yea"]}"
          %li
            = "Nay: #{@seniority_tally["Nay"]}"
     
      %p.details
        \- details -

      %p.drop  
        Each state gets one vote and the rest are allocated by population. For states with an odd number of votes, give the extra (or only) vote to the senior senator. 

  %div#roll-call-partial
    = render :partial => "roll_call"


:javascript 

  var bodyAjax = (function() {

      var ajaxLink = function( element ) {
              $link = $( element );
              href = $link.attr( 'href' );
              $.get( href ).success( function( result ) {
                  bodyAjax.switchBody( result );
              });
      };  

      var switchBody = function( result ) { 
              newBody = $.parseHTML( result, document, true );
              oldBody = $( 'body' );
              oldBody.html( newBody );
      };

      return {
          ajaxLink: ajaxLink,
          switchBody: switchBody
      };
  })();
  
  $( document ).ready( function() {

    document.title = '#{@vote.question}';

    var billLink = (function() {

      $( 'a' ).on( 'click', function( e ) {
        bodyAjax.ajaxLink( e.target );
        history.pushState({path: '#{bill_path(@vote.bill)}'}, '', '#{bill_path(@vote.bill)}');
        return false
      });
    })();  

    var rollCall = (function() {

      var $rollCall = $( "div#roll-call-partial" );
      var $traditionalVote = $( "div#traditional-box" );
      var $popularVote = $( "div#popular-box" );
      var $fractionalVote = $( "div#fraction-box" );
      var $seniorityVote = $( "div#seniority-box" );

      var alternateRollCall = function(vote_type) {
        switch (vote_type) {
        case 'traditional':
          $rollCall.html('#{escape_javascript( render 'roll_call', roll: 'traditional' )}');
          break;
        case 'popular':
          $rollCall.html('#{escape_javascript( render 'roll_call', roll: 'popular' )}');
          break;
        case 'fractional':
          $rollCall.html('#{escape_javascript( render 'roll_call', roll: 'fractional' )}');
          break;
        case 'seniority':
          $rollCall.html('#{escape_javascript( render 'roll_call', roll: 'seniority' )}');
          break;
        };
      };

      $popularVote.click( function() {
        alternateRollCall('popular');
      }); 
      
      $traditionalVote.click( function() {
        alternateRollCall('traditional');
      }); 

      $fractionalVote.click( function() {
        alternateRollCall('fractional');
      }); 

      $seniorityVote.click( function() {
        alternateRollCall('seniority');
      }); 
    })();
  });
